{"version":3,"sources":["hooks/useScript.js","hooks/useDarkMode.js","context/EditorSettingsContext.js","context/ThemeContext.js","components/Editor/Editor.js","components/Canvas/Canvas.js","components/Editor/EditorControls.js","components/Button/Button.js","components/Modal/Modal.js","components/ThemeSelector/ThemeSelector.js","components/FontSizeSelector/FontSizeSelector.js","components/KeybindingSelector/KeybindingSelector.js","components/Button/EditorSettingsButton.js","components/EditorControlBar/EditorControlBar.js","pages/ProcessingEditorPage.js","components/LoadingScreen/LoadingScreen.js","App.js","reportWebVitals.js","index.js"],"names":["useScript","url","useEffect","script","document","createElement","src","body","appendChild","useDarkMode","defaultValue","useState","localStorage","getItem","theme","setTheme","oldTheme","root","window","documentElement","classList","remove","add","setItem","EditorSettingsContext","createContext","ThemeContext","Editor","forwardRef","ref","children","useContext","editorSettings","setEditorSettings","prevEditorSettings","className","width","height","name","mode","fontSize","keyboardHandler","editorProps","$blockScrolling","setOptions","highlightActiveLine","enableBasicAutocompletion","enableLiveAutocompletion","Canvas","props","id","EditorControls","editorRef","canvasRef","runCode","this","resetInstance","processingSource","current","editor","getValue","processingCanvas","test","processingInstance","Processing","draw","e","displayError","exit","background","error","i","regex","string","outputMessage","message","errorTable","length","replace","alert","Button","onClick","value","disabled","Modal","isOpen","toggleModal","createPortal","getElementById","ThemeSelector","toggleTheme","normalIconTheme","invertedIconTheme","FontSizeSelector","fontSizeInput","setFontSize","onSubmit","event","preventDefault","parseInt","Number","isNaN","onChange","target","type","element","select","KeybindingSelector","EditorSettingsButton","modalState","setModalState","EditorControlBar","editorControls","ProcessingEditorPage","createRef","React","Component","LoadingScreen","loading","loaderConfig","color","size","margin","App","setLoading","editorSettingsHook","themeSettingsHook","process","setTimeout","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c297d463.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst useScript = (url) => {\r\n    useEffect(() => {\r\n        const script = document.createElement(\"script\");\r\n        script.src = url;\r\n        document.body.appendChild(script);\r\n    }, [url]);\r\n};\r\n\r\nexport default useScript;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useDarkMode(defaultValue) {\r\n    const [theme, setTheme] = useState(\r\n        localStorage.getItem(\"theme\") || defaultValue\r\n    );\r\n    const oldTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n\r\n    useEffect(() => {\r\n        const root = window.document.documentElement;\r\n\r\n        root.classList.remove(oldTheme);\r\n        root.classList.add(theme);\r\n\r\n        localStorage.setItem(\"theme\", theme);\r\n    }, [oldTheme, theme]);\r\n\r\n    function toggleTheme() {\r\n        setTheme((theme) => {\r\n            return theme === \"dark\" ? \"light\" : \"dark\";\r\n        });\r\n    }\r\n    return [theme, setTheme, toggleTheme];\r\n}\r\n\r\nexport default useDarkMode;\r\n","import { createContext } from \"react\";\r\n\r\nconst EditorSettingsContext = createContext({});\r\n\r\nexport default EditorSettingsContext;\r\n","import { createContext } from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport default ThemeContext;\r\n","import React, { useContext, forwardRef, useEffect } from \"react\";\r\nimport EditorSettingsContext from \"../../context/EditorSettingsContext\";\r\nimport ThemeContext from \"../../context/ThemeContext\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-iplastic\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\n\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-min-noconflict/ext-error_marker\";\r\n\r\nimport \"ace-builds/src-noconflict/keybinding-vim\";\r\nimport \"ace-builds/src-noconflict/keybinding-vscode\";\r\nimport \"ace-builds/src-min-noconflict/keybinding-emacs\";\r\nimport \"ace-builds/src-min-noconflict/keybinding-sublime\";\r\n\r\nconst Editor = forwardRef(function Editor({ children }, ref) {\r\n    const [editorSettings, setEditorSettings] = useContext(\r\n        EditorSettingsContext\r\n    );\r\n    const [theme] = useContext(ThemeContext);\r\n\r\n    // Added so that the editors theme changes based on global theme\r\n    useEffect(() => {\r\n        setEditorSettings((prevEditorSettings) => {\r\n            if (theme === \"light\") {\r\n                let newState = {\r\n                    ...prevEditorSettings,\r\n                    theme: \"iplastic\",\r\n                };\r\n                return newState;\r\n            } else {\r\n                return {\r\n                    ...prevEditorSettings,\r\n                    theme: \"dracula\",\r\n                };\r\n            }\r\n        });\r\n    }, [theme, setEditorSettings]);\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-start w-full mb-5 md:m-0 h-85vh md:w-1/2\">\r\n            <p className=\"text mb-2\"> Your Sketch </p>\r\n            <AceEditor\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                name=\"editor\"\r\n                ref={ref}\r\n                mode={editorSettings.mode}\r\n                theme={editorSettings.theme}\r\n                fontSize={editorSettings.fontSize}\r\n                keyboardHandler={editorSettings.keyboardHandler}\r\n                defaultValue={editorSettings.defaultValue}\r\n                editorProps={{\r\n                    $blockScrolling: true,\r\n                }}\r\n                setOptions={{\r\n                    highlightActiveLine: false,\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Editor;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nconst Canvas = forwardRef(function (props, ref) {\r\n    return (\r\n        <div\r\n            id=\"editorCanvasContainer\"\r\n            className=\"w-full md:w-5/12 overflow-x-scroll\"\r\n        >\r\n            <p className=\"text mb-2\"> Preview </p>\r\n            <canvas\r\n                id=\"editorCanvas\"\r\n                className=\"transition duration-500 dark:bg-gray-900\"\r\n                ref={ref}\r\n            ></canvas>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Canvas;\r\n","function EditorControls(editorRef, canvasRef) {\r\n    return {\r\n        editorRef,\r\n        canvasRef,\r\n        runCode() {\r\n            this.resetInstance();\r\n\r\n            try {\r\n                var editor = this.editorRef.current.editor;\r\n                var processingSource = editor.getValue(),\r\n                    processingCanvas = this.canvasRef.current;\r\n                if (!/size\\(\\s*\\d+\\s*,\\s*\\d+\\s*\\)/.test(processingSource)) {\r\n                    processingSource = \"size(500,400);\\n\\n\" + processingSource;\r\n                }\r\n\r\n                this.processingInstance = new window.Processing(\r\n                    processingCanvas,\r\n                    processingSource\r\n                );\r\n\r\n                if (typeof this.processingInstance.draw === \"function\") {\r\n                    this.processingInstance.draw();\r\n                }\r\n            } catch (e) {\r\n                this.displayError(e);\r\n            }\r\n        },\r\n        resetInstance() {\r\n            if (this.processingInstance) {\r\n                this.processingInstance.exit();\r\n                this.processingInstance.background(\"#cfcfcf\");\r\n                this.processingInstance = null;\r\n            }\r\n            this.canvasRef.current.width = 0;\r\n            this.canvasRef.current.height = 0;\r\n        },\r\n        displayError(error) {\r\n            // This table is an array of pairs consisting of a regular\r\n            // expression and a friendly replacement string which can\r\n            // include values matched in the regex. Pair one example:\r\n            //\r\n            // Input Javascript Error:\r\n            // Can't find variable: rectt\r\n            // Output Friendly Error:\r\n            // I'm not sure what 'rect' means. Maybe it's a typo?\r\n\r\n            var i,\r\n                regex,\r\n                string,\r\n                outputMessage = error.message,\r\n                errorTable = [\r\n                    [\r\n                        /Can't find variable: (\\w+)/,\r\n                        \"I'm not sure what '$1' means. Maybe it's a typo?\",\r\n                    ],\r\n                    [\r\n                        /(Une|E)xpected token '(\\)|\\()'/,\r\n                        \"Looks like your parentheses don't match up. Remember, you need a right parenthesis for every left parenthesis.\",\r\n                    ],\r\n                ];\r\n\r\n            for (i = 0; i < errorTable.length; i += 1) {\r\n                regex = errorTable[i][0];\r\n                string = errorTable[i][1];\r\n\r\n                if (regex.test(outputMessage)) {\r\n                    outputMessage = outputMessage.replace(regex, string);\r\n                    break;\r\n                }\r\n            }\r\n            alert(outputMessage);\r\n            return;\r\n        },\r\n    };\r\n}\r\n\r\nexport default EditorControls;\r\n","import React from \"react\";\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={`buttonBase ${props.className}`}\r\n            value={props.value}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import { createPortal } from \"react-dom\";\r\n\r\nfunction Modal({ children, isOpen, toggleModal }) {\r\n    if (!isOpen) {\r\n        return null;\r\n    }\r\n\r\n    return createPortal(\r\n        <>\r\n            <div className=\"modalOverlay\" onClick={toggleModal}></div>\r\n            <div className=\"modal\">{children}</div>\r\n        </>,\r\n        document.getElementById(\"modal\")\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import { useContext } from \"react\";\r\nimport ThemeContext from \"../../context/ThemeContext\";\r\nimport Button from \"../Button/Button\";\r\nimport { FaSun, FaMoon } from \"react-icons/fa\";\r\n\r\nfunction ThemeSelector() {\r\n    const [theme, , toggleTheme] = useContext(ThemeContext);\r\n    const normalIconTheme =\r\n        \"w-3 h-3 stroke-gray-800 fill-gray-800 group-hover:stroke-gray-200 group-hover:fill-gray-200\";\r\n    const invertedIconTheme = \"w-3 h-3 stroke-gray-200 fill-gray-200\";\r\n    return (\r\n        <div className=\"flex flex-row justify-between w-24 pb-3\">\r\n            <Button\r\n                onClick={() => {\r\n                    if (theme === \"light\") {\r\n                        return;\r\n                    }\r\n                    toggleTheme();\r\n                }}\r\n                className={\r\n                    theme === \"light\"\r\n                        ? \"invertedControlButton group\"\r\n                        : \"standardControlButton group\"\r\n                }\r\n            >\r\n                <FaSun\r\n                    className={\r\n                        theme === \"light\" ? invertedIconTheme : normalIconTheme\r\n                    }\r\n                />\r\n            </Button>\r\n            <Button\r\n                onClick={() => {\r\n                    if (theme === \"dark\") {\r\n                        return;\r\n                    }\r\n                    toggleTheme();\r\n                }}\r\n                className={\r\n                    theme === \"dark\"\r\n                        ? \"invertedControlButton group\"\r\n                        : \"standardControlButton group\"\r\n                }\r\n            >\r\n                <FaMoon\r\n                    className={\r\n                        theme === \"dark\" ? invertedIconTheme : normalIconTheme\r\n                    }\r\n                />\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemeSelector;\r\n","import { useContext } from \"react\";\r\nimport EditorSettingsContext from \"../../context/EditorSettingsContext\";\r\nimport { FaMinus, FaPlus } from \"react-icons/fa\";\r\nimport Button from \"../Button/Button\";\r\n\r\nfunction FontSizeSelector() {\r\n    const [editorSettings, setEditorSettings] = useContext(\r\n        EditorSettingsContext\r\n    );\r\n    let fontSizeInput;\r\n    function onFontInputChange(event) {\r\n        const INTEGER_REGEX = /^[0-9\\b]+$/;\r\n        if (\r\n            event.target.value === \"\" ||\r\n            INTEGER_REGEX.test(event.target.value)\r\n        ) {\r\n            setEditorSettings((prevEditorSettings) => ({\r\n                ...prevEditorSettings,\r\n                fontSize: event.target.value,\r\n            }));\r\n            localStorage.setItem(\"fontSize\", event.target.value);\r\n        }\r\n    }\r\n\r\n    function onFontInputSubmit(event) {\r\n        event.preventDefault();\r\n        let value = parseInt(editorSettings.fontSize, 10);\r\n        if (Number.isNaN(value)) {\r\n            value = 16;\r\n        }\r\n        if (value > 36) {\r\n            value = 36;\r\n        }\r\n        if (value < 8) {\r\n            value = 8;\r\n        }\r\n        setFontSize(value);\r\n    }\r\n\r\n    function setFontSize(value) {\r\n        setEditorSettings((prevEditorSettings) => ({\r\n            ...prevEditorSettings,\r\n            fontSize: value,\r\n        }));\r\n        localStorage.setItem(\"fontSize\", value);\r\n    }\r\n\r\n    function decreaseFontSize() {\r\n        const newValue = editorSettings.fontSize - 2;\r\n        setFontSize(newValue);\r\n    }\r\n\r\n    function increaseFontSize() {\r\n        const newValue = editorSettings.fontSize + 2;\r\n        setFontSize(newValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-row justify-between items-center w-4/12 pb-3\">\r\n            <Button\r\n                className=\"standardControlButton group\"\r\n                onClick={decreaseFontSize}\r\n                disabled={editorSettings.fontSize <= 8}\r\n            >\r\n                <FaMinus className=\"w-3 h-3 stroke-gray-800 fill-gray-800 group-hover:stroke-gray-200 group-hover:fill-gray-200\" />\r\n            </Button>\r\n            <form onSubmit={onFontInputSubmit}>\r\n                <input\r\n                    className=\"text-center w-8 h-8 rounded\"\r\n                    value={editorSettings.fontSize}\r\n                    onChange={onFontInputChange}\r\n                    type=\"text\"\r\n                    ref={(element) => {\r\n                        fontSizeInput = element;\r\n                    }}\r\n                    onClick={() => {\r\n                        fontSizeInput.select();\r\n                    }}\r\n                />\r\n            </form>\r\n            <Button\r\n                className={\"standardControlButton group\"}\r\n                onClick={increaseFontSize}\r\n                disabled={editorSettings.fontSize >= 36}\r\n            >\r\n                <FaPlus className=\"w-3 h-3 stroke-gray-800 fill-gray-800 group-hover:stroke-gray-200 group-hover:fill-gray-200\" />\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FontSizeSelector;\r\n","import { useContext } from \"react\";\r\nimport EditorSettingsContext from \"../../context/EditorSettingsContext\";\r\n\r\nfunction KeybindingSelector() {\r\n    const [editorSettings, setEditorSettings] = useContext(\r\n        EditorSettingsContext\r\n    );\r\n\r\n    function handleChange(event) {\r\n        setEditorSettings((prevEditorSettings) => ({\r\n            ...prevEditorSettings,\r\n            keyboardHandler: event.target.value,\r\n        }));\r\n        localStorage.setItem(\"keyboardHandler\", event.target.value);\r\n    }\r\n    return (\r\n        <select\r\n            className=\"text-center rounded\"\r\n            value={editorSettings.keyboardHandler}\r\n            onChange={handleChange}\r\n        >\r\n            <option value=\"vscode\">VSCode (recommended)</option>\r\n            <option value=\"sublime\">Sublime</option>\r\n            <option value=\"vim\">Vim</option>\r\n            <option value=\"emacs\">Emacs</option>\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default KeybindingSelector;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { FaCog } from \"react-icons/fa\";\r\nimport ThemeSelector from \"../ThemeSelector/ThemeSelector\";\r\nimport FontSizeSelector from \"../FontSizeSelector/FontSizeSelector\";\r\nimport KeybindingSelector from \"../KeybindingSelector/KeybindingSelector\";\r\n\r\nfunction EditorSettingsButton() {\r\n    const [modalState, setModalState] = useState(false);\r\n\r\n    function toggleModal() {\r\n        setModalState((isOpen) => !isOpen);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                className=\"standardControlButton group\"\r\n                onClick={toggleModal}\r\n            >\r\n                <FaCog className=\"w-4 h-4 stroke-gray-800 fill-gray-800 group-hover:stroke-gray-200 group-hover:fill-gray-200\" />\r\n            </Button>\r\n\r\n            <Modal isOpen={modalState} toggleModal={toggleModal}>\r\n                <h1 className=\"settingsTitle\">Settings</h1>\r\n                <div className=\"overflow-y-scroll\">\r\n                    <div className=\"border-bottom-dashed py-2 mb-2\">\r\n                        <h3 className=\"preferencesTitle\">Theme</h3>\r\n                        <ThemeSelector />\r\n                    </div>\r\n                    <div className=\"border-bottom-dashed py-2 mb-2\">\r\n                        <h3 className=\"preferencesTitle\">Text Size</h3>\r\n                        <FontSizeSelector />\r\n                    </div>\r\n                    <div>\r\n                        <h3 className=\"preferencesTitle\">Text Editor</h3>\r\n                        <KeybindingSelector />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorSettingsButton;\r\n","import Button from \"../Button/Button\";\r\nimport { FaPlay, FaStop } from \"react-icons/fa\";\r\nimport EditorSettingsButton from \"../Button/EditorSettingsButton\";\r\n\r\nfunction EditorControlBar({ editorControls }) {\r\n    return (\r\n        <div className=\"editorControlBar border-bottom-dashed flex justify-center py-3\">\r\n            <div className=\"w-11/12 flex justify-between\">\r\n                <div className=\"w-24 inline-flex justify-between\">\r\n                    <Button\r\n                        onClick={() => editorControls.runCode()}\r\n                        className=\"standardControlButton group\"\r\n                    >\r\n                        <FaPlay className=\"w-4 h-4 stroke-gray-800 fill-gray-800 group-hover:stroke-gray-200 group-hover:fill-gray-200\" />\r\n                    </Button>\r\n\r\n                    <Button\r\n                        onClick={() => editorControls.resetInstance()}\r\n                        className=\"invertedControlButton\"\r\n                    >\r\n                        <FaStop className=\"w-4 h-4 stroke-gray-200 fill-gray-200\" />\r\n                    </Button>\r\n                </div>\r\n                <EditorSettingsButton />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditorControlBar;\r\n","import React, { createRef } from \"react\";\r\nimport Editor from \"../components/Editor/Editor\";\r\nimport Canvas from \"../components/Canvas/Canvas\";\r\nimport EditorControls from \"../components/Editor/EditorControls\";\r\nimport EditorControlBar from \"../components/EditorControlBar/EditorControlBar\";\r\n\r\nclass ProcessingEditorPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editorRef = createRef();\r\n        this.canvasRef = createRef();\r\n        this.editorControls = EditorControls(this.editorRef, this.canvasRef);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"absolute top-0 left-0 right-0 max-w-full min-h-full transition duration-500 dark:bg-gray-900 \">\r\n                <EditorControlBar editorControls={this.editorControls} />\r\n\r\n                <div className=\"pt-2 flex flex-row justify-center pb-5\">\r\n                    <div className=\"flex flex-col w-11/12 md:flex-row justify-between items-start\">\r\n                        <Editor ref={this.editorRef} />\r\n                        <Canvas ref={this.canvasRef} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProcessingEditorPage;\r\n","import Loader from \"react-spinners/GridLoader\";\r\nimport ThemeContext from \"../../context/ThemeContext\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction LoadingScreen({ loading }) {\r\n    const [theme] = useContext(ThemeContext);\r\n    const loaderConfig = {\r\n        color: theme === \"light\" ? \"#1E40AF\" : \"#BFDBFE\",\r\n        loading: loading,\r\n        size: 20,\r\n        margin: 5,\r\n    };\r\n    return (\r\n        <div className=\"flex flex-row justify-center items-center fixed z-10 inset-0 dark:bg-gray-900\">\r\n            <Loader {...loaderConfig} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import { useState, useEffect } from \"react\";\nimport useScript from \"./hooks/useScript\";\nimport useDarkMode from \"./hooks/useDarkMode\";\nimport ProcessingEditorPage from \"./pages/ProcessingEditorPage\";\nimport LoadingScreen from \"./components/LoadingScreen/LoadingScreen\";\nimport EditorSettingsContext from \"./context/EditorSettingsContext\";\nimport ThemeContext from \"./context/ThemeContext\";\n\nfunction App() {\n    let [loading, setLoading] = useState(true);\n    let editorSettingsHook = useState({\n        mode: \"java\",\n        theme: \"iplastic\",\n        defaultValue:\n            \"float angle = PI/4;\\nfloat len = 140;\\n\\nvoid setup() {\\n  size(400, 400);\\n}\\n\\nvoid draw() {\\n  background(17, 24, 39);\\n\\n  pushMatrix();\\n  translate(width/2, height);\\n  stroke(255);\\n  drawBranch(len, angle);\\n  popMatrix();\\n\\n  angle += 0.04;\\n\\n}\\n\\nvoid drawBranch(float len, float angle) {\\n  line(0, 0, 0, -len);\\n\\n  if (len > 2) {\\n    translate(0, -len);\\n    pushMatrix();\\n    rotate(angle);\\n    drawBranch(len * 0.6, angle);\\n    popMatrix();\\n\\n    pushMatrix();\\n    rotate(-angle);\\n    drawBranch(len * 0.6, angle);\\n    popMatrix();\\n  }\\n}\",\n        fontSize: Number(localStorage.getItem(\"fontSize\")) || 16,\n        keyboardHandler: localStorage.getItem(\"keyboardHandler\") || \"vscode\",\n    });\n    let themeSettingsHook = useDarkMode(\"light\");\n    useScript(process.env.PUBLIC_URL + \"/processing/processing.js\");\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLoading(false);\n        }, 1000);\n    }, []);\n\n    return (\n        <EditorSettingsContext.Provider value={editorSettingsHook}>\n            <ThemeContext.Provider value={themeSettingsHook}>\n                <div className=\"App \">\n                    {loading ? (\n                        <LoadingScreen loading={loading} />\n                    ) : (\n                        <ProcessingEditorPage />\n                    )}\n                </div>\n            </ThemeContext.Provider>\n        </EditorSettingsContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}